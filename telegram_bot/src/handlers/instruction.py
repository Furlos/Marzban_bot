from aiogram import Router, types
from aiogram.utils.keyboard import InlineKeyboardBuilder
from telegram_bot.src.handlers.api_requests import get_user_by_username

instruction_router = Router()

@instruction_router.callback_query(lambda c: c.data == "instruction")
async def show_instruction(callback: types.CallbackQuery):
    try:
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        api_response = await get_user_by_username(str(callback.from_user.id))

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞
        if not api_response or api_response.get("status") != 200:
            await callback.answer("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è", show_alert=True)
            return

        data = api_response.get("data", {})

        # –ò—Å–ø–æ–ª—å–∑—É–µ–º connection_link –µ—Å–ª–∏ –µ—Å—Ç—å, –∏–Ω–∞—á–µ username
        connection_link = data.get("connection_link", data.get("connection_file", data.get("username", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞")))

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        instruction = """
üéØ <b>–ü–æ–ª–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é VPN</b>

1Ô∏è‚É£ <b>–°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ</b> –¥–ª—è –≤–∞—à–µ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:
   ‚Ä¢ <a href="https://apps.apple.com/us/app/outline-app/id1356177741">iOS (iPhone/iPad)</a>
   ‚Ä¢ <a href="https://play.google.com/store/apps/details?id=org.outline.android.client">Android</a>
   ‚Ä¢ <a href="https://outline-vpn.com/download.php?os=c_windows">Windows</a>
   ‚Ä¢ <a href="https://outline-vpn.com/download.php?os=c_macos">Mac</a>

3Ô∏è‚É£ <b>–ö–∞–∫ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è:</b>
   1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ Outline
   2. –ù–∞–∂–º–∏—Ç–µ "–î–æ–±–∞–≤–∏—Ç—å —Å–µ—Ä–≤–µ—Ä"
   3. –í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
   4. –ì–æ—Ç–æ–≤–æ! –í–∞—à VPN –∞–∫—Ç–∏–≤–µ–Ω üöÄ
"""

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é
        await callback.message.answer(
            instruction,
            parse_mode="HTML",
            disable_web_page_preview=True
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        credentials = f"""
üîê <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>

<code>{connection_link}</code>

–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å!
"""

        await callback.message.answer(
            credentials,
            parse_mode="HTML"
        )

    except Exception as e:
        print(f"Error in show_instruction: {e}")
        await callback.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", show_alert=True)

    await callback.answer()